#sidebar= render 'shared/node_manager_sidebar'
#main
  .header
    %h2
      = node_status_icon(@node)
      Node:
      = h @node.name
      %span.alt= "(hidden)" if @node.hidden
    - if SETTINGS.use_external_node_classification && !SETTINGS.enable_read_only_mode
      %ul.actions
        %li= link_to 'Edit', edit_node_path(@node), :class => "edit button", :rel => 'inspect'
        - if @node.hidden
          %li= link_to 'Unhide', unhide_node_path(@node), :class => "hide button", :method => :put
        - else
          %li= link_to 'Hide', hide_node_path(@node), :class => "hide button", :method => :put
        %li= link_to 'Destroy', @node, :confirm => 'Are you sure you wish to destroy this node?', :method => :delete, :class => "delete button"
  .item
    - unless @node.description.blank?
      .description= simple_format h(@node.description)

    - if SETTINGS.use_external_node_classification
      = render 'shared/parameters', :resource => @node
      = render 'shared/groups', :resource => @node
      = render 'shared/classes', :resource => @node

    %br.clear

    - if SETTINGS.experimental_inventory_service
      .section
        %h3 Inventory
        %div#inventory
          = image_tag "loading.gif"
          = "Loading node inventory"
        %script{:type => 'text/javascript'}= load_asynchronously("div#inventory", facts_node_path(@node))

      %br.clear

    - reports = @node.reports.applies.limit(30).order('time ASC')
    - unless reports.empty?
      .section
        = render 'statuses/run_failure', :node => @node

      .section
        = render 'statuses/run_time', :reports => reports.reverse

      .section
        %h3
          Recent reports
          %span.count== (#{@node.reports.applies.count})
          - reports_limit = 10
        %table.inspector
          %thead
            %tr
              %th.status
              %th Reported at
              %th Total
              %th Failed
              %th Runtime
          %tbody
            - @node.reports.applies.limit(reports_limit).each do |report|
              %tr
                = report_status_td(report)
                %td= link_to report.time, report
                %td= report.total_resources
                %td= report.failed_resources
                %td= report.total_time
          - if @node.reports.applies.count > reports_limit
            %tfoot
              %tr
                %td{:colspan => 5}
                  .actionbar
                    = link_to "More &raquo;", reports_node_path(@node, :kind => "apply"), :class => 'button'

    - Registry.each_hook :core, :node_view_widgets do |thing|
      = thing.call self, @node
    - if @node.reports.inspections.count > 0
      .section
        %h3
          Recent inspections
          %span.count== (#{@node.reports.inspections.count})
          - reports_limit = 10
        - if @node.baseline_report
          %h4
            Baseline:
            = link_to "#{@node.baseline_report.time}", @node.baseline_report
        %table.inspector
          %thead
            %tr
              %th.status
              %th Reported at
              %th Total
              %th Runtime
          %tbody
            - @node.reports.inspections.limit(reports_limit).each do |report|
              %tr
                = report_status_td(report)
                %td= link_to report.time, report
                %td= report.total_resources
                %td= report.total_time
          - if @node.reports.inspections.count > reports_limit
            %tfoot
              %tr
                %td{:colspan => 5}
                  .actionbar
                    = link_to "More &raquo;", reports_node_path(@node, :kind => "inspect"), :class => 'button'

    .section
      %h3 Dashboard activity
      - unless @node.timeline_events.empty?
        %ol.timeline= render @node.timeline_events.recent(10)
      - else
        = describe_no_matches_for :activity

    %br.clear
