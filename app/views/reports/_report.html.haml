.header
  %h2
    %span.status{:class => report.status}
      = report_status_icon(report)
      Report:
      = report.time.to_s
    - if report.node
      %span.alt for
      = link_to report.node.name, report.node
  %ul.actions
    %li= link_to 'Destroy', @report, :confirm => 'Are you sure?', :method => :delete, :class => "delete button"

.item
  .section
    %h3 Log
    .section
      %table.inspector
        %thead
          %tr
            %th Level
            %th Message
            %th Source
            %th Time
        %tbody
          - if report.logs.present?
            = render :partial => 'puppet/util/logs/log', :collection => puppet_log_sorter(report.logs.compact)
          - else
            %td.empty{:colspan => 4}
              = describe_no_matches_for 'log messages', :report
  - if report.report.respond_to? :resource_statuses
    .section
      %h3 Resources
      %table.inspector
        %thead
          %tr
            %th Name
            %th Property
            %th Previous
            %th Current
        %tbody
          - report.report.resource_statuses.each do |name,status|
            - next if name =~ /^Schedule/ or name =~ /^Filebucket/
            %tr
              %td{:class => status.changed ? :changed : nil, :rowspan => status.events.count+1}
                = status.resource
            - status.events.each do |event|
              %tr
                %td= event.property
                %td= event.previous_value
                %td= event.desired_value

  .section
    %h3 Metrics
    - if report.metrics.present?
      - report.metrics.sort_by{|name, metric| name}.each do |name, metric|
        - if metric.values.present?
          .section
            %h4= name.titleize
            %table.inspector
              = render metric
    - else
      &mdash; No metrics in this report &mdash;
